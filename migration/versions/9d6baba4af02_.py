"""empty message

Revision ID: 9d6baba4af02
Revises: c9b9816e2d5c
Create Date: 2025-05-09 17:18:09.916361

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9d6baba4af02'
down_revision: Union[str, None] = 'c9b9816e2d5c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'Flats', ['id'])
    op.create_unique_constraint(None, 'Flats_from_rieltor', ['id'])
    op.create_unique_constraint(None, 'banned_ip', ['id'])
    op.create_unique_constraint(None, 'expired_tokens', ['id'])
    op.add_column('rieltors', sa.Column('name', sa.String(), nullable=True))
    op.add_column('rieltors', sa.Column('surname', sa.String(), nullable=True))
    op.add_column('rieltors', sa.Column('email', sa.String(), nullable=False))
    op.create_unique_constraint(None, 'rieltors', ['id'])
    op.create_unique_constraint(None, 'subscription', ['id'])
    op.create_unique_constraint(None, 'user_subscription', ['id'])
    op.add_column('users', sa.Column('hashed_password', sa.String(), nullable=False))
    op.create_unique_constraint(None, 'users', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'hashed_password')
    op.drop_constraint(None, 'user_subscription', type_='unique')
    op.drop_constraint(None, 'subscription', type_='unique')
    op.drop_constraint(None, 'rieltors', type_='unique')
    op.drop_column('rieltors', 'email')
    op.drop_column('rieltors', 'surname')
    op.drop_column('rieltors', 'name')
    op.drop_constraint(None, 'expired_tokens', type_='unique')
    op.drop_constraint(None, 'banned_ip', type_='unique')
    op.drop_constraint(None, 'Flats_from_rieltor', type_='unique')
    op.drop_constraint(None, 'Flats', type_='unique')
    # ### end Alembic commands ###
